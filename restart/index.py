from constants import *
from ga import *

population = np.array([np.copy(OVERFIT_ERR) for i in range(NUM_POPULATION)])


for idx in range(NUM_POPULATION):
    prob = random.random()
    if(prob <= 0.63): # 7/11
        # print("FO")
        gene_id = np.random.randint(NUM_GENES)
        population[idx][gene_id] = 0

    # print()
    # print(population[idx])

    population[idx] = mutate_child(population[idx])
    # print(population[idx])



population = np.array([
[ -6.395785900499008e-09, -3.455010673819959e-13, -6.721580523729902e-10, 1.9241020559760175e-11, -6.727181852215721e-11, -8.069445813859906e-16, 1.0497133811687078e-10, 1.1660174934795874e-05, -1.2463699796094077e-06, -1.7557993691863516e-09, 5.14612795425654e-10, ],
[ -2.917045809334564e-09, -5.491905644003098e-13, -2.6435159525371547e-10, 3.066737633386919e-12, -3.5394720031088024e-11, -9.498584870881893e-16, 3.995448171349049e-10, 4.883625511216585e-06, -9.514361801231002e-07, -9.092890828235501e-10, 3.44538464645763e-10, ],
[ -1.908068490415351e-09, -1.0105657652151777e-12, -1.5902244489353608e-10, 2.4485930926939046e-12, -3.8678577559804666e-11, -1.6158788210439386e-16, 9.546210412582385e-10, 4.954885066859329e-06, -9.618414654424163e-07, -8.823451601417064e-10, 3.2873590386967103e-10, ],
[ -1.979552175531914e-09, -1.131615476125444e-12, -2.3954750163449834e-10, 2.4483824050608585e-12, -1.5692303202187183e-11, -2.054993776663611e-16, 9.143207985436406e-10, 4.8529713400040545e-06, -9.296532728111923e-07, -7.226575986724238e-10, 3.2873362942675205e-10, ],
[ -3.3567508855583065e-09, -1.5670985229363114e-12, -2.453636877586258e-10, 1.6666484420629636e-12, -4.731828947888051e-11, -1.906111792673618e-16, 6.289293057416853e-10, 5.624789707273789e-06, -9.501584924026616e-07, -1.157293120374751e-09, 3.360366986659506e-10, ],
[ -2.6880327297344165e-09, -6.717074014617671e-13, -1.639019517146059e-10, 2.713645906095159e-12, -3.855339470758899e-11, -4.814907600404815e-16, 6.035319533708099e-10, 4.951132304592103e-06, -9.625837943458704e-07, -6.830050604331548e-10, 3.293508993413018e-10, ],
[ -1.8762914022866415e-09, -6.655078402296813e-13, -1.877507582455494e-10, 2.7503618046952935e-12, -1.307861405558485e-11, -5.881070165278452e-16, 6.491524238395917e-10, 5.067021186334041e-06, -9.750864519102871e-07, -6.957537548471732e-10, 3.3483762417319257e-10, ],
[ -1.6777115652569833e-09, -9.689861776856837e-13, -1.0067596552490131e-10, -4.2408431751998487e-13, -1.6356845400058187e-11, -4.54081017637113e-16, 7.616839126679603e-10, 1.7361239342873225e-06, -8.487123765617876e-07, -8.7647391138839e-10, 2.4896212572782143e-10, ],
[ -1.908068490415351e-09, -1.0105657652151777e-12, -1.5902244489353608e-10, 2.4485930926939046e-12, -3.8678577559804666e-11, -1.6158788210439386e-16, 9.546210412582385e-10, 4.954885066859329e-06, -9.618414654424163e-07, -8.823451601417064e-10, 3.2873590386967103e-10, ],
[ -1.930364621773666e-09, -2.1861480839961615e-12, -3.706029977432282e-10, 1.5913346758885428e-12, -1.4719534262442376e-11, -2.481896858838202e-16, 5.975599867063253e-10, 3.265721377124952e-06, -1.0807998732988082e-06, -1.6463302263789104e-09, 3.4252868687234574e-10, ]
])

fitness = calculate_fitness(population)
#[......., val, train, fitness]
#(20,14)
count = 1

print("INITIAL POPULATION")

for i in fitness:
    # write_file(i[:-3])
    # write_file(",".join(i))
    # print("[ ", end="")
    print("[ ", end="")
    for j in i[:-3]:
        print(j, end=", ")
    # f.write("]\n")
    print("]")
print()

while(input() != "NO"):

    print("Generation: ", count)
    
    print("\n\n------------------------------\n")
    print("Generation " + str(count) + "\n")
    print("Initial Population: \n")


    print("\nFitness: \n")
    
    for i in fitness:
        # write_file(i[-3:])
        print(i[-3:])
        # for j in i[:-3]:
        #     print(j, end=", ")
    
    
    mating_pool = select_mating_pool(fitness)

    print("\nAfter Selection: \n")
    for i in mating_pool:
        print(i[:-3])

    offsprings = create_offsprings(mating_pool)


    new_gen = create_gen(np.array(offsprings), fitness)


    fitness = new_gen
    population = new_gen[:,:-3]

    print("\n New Generation:\n")

    for i in new_gen:
        # write_file(i[:-3])
        # write_file(",".join(i))
        # print("[ ", end="")
        print("[ ", end="")
        for j in i[:-3]:
            print(j, end=", ")
        # f.write("]\n")
        print("]")
    print()

    print()
    count += 1
    # print(population.shape)

f.close()
