from constants import *
from ga import *

population = np.array([np.copy(OVERFIT_ERR) for i in range(NUM_POPULATION)])


for idx in range(NUM_POPULATION):
    prob = random.random()
    if(prob <= 0.63): # 7/11
        # print("FO")
        gene_id = np.random.randint(NUM_GENES)
        population[idx][gene_id] = 0

    # print()
    # print(population[idx])

    population[idx] = mutate_child(population[idx])
    # print(population[idx])



population = np.array([
[ -6.592972180185579e-11, -1.9510465228606693e-12, -2.923968057889044e-13, 3.217251390611483e-11, -7.154638778162205e-11, -1.977217270371902e-15, 1.6272762965508542e-15, 2.2541180287050764e-05, -2.631105836160539e-06, -8.212833382542587e-09, 1.165575947597691e-09, ],
[ 3.871990838609719e-09, -1.6418746442929332e-12, -6.569802103929952e-11, 2.2954805641874336e-11, -2.625483255390138e-10, -2.3258055213031815e-15, 1.107203770486554e-15, 1.3269564041965774e-05, -2.2524206148353264e-06, -9.312613249094208e-09, 1.0183985029287346e-09, ],
[ 1.1545033671253255e-08, -1.6184009307067586e-12, -3.1606739552798644e-11, 5.59835283879149e-11, -2.2293045176183976e-10, -1.7583591957363527e-15, 6.364922171167193e-16, 1.6083190252155923e-05, -2.465531227983224e-06, -1.05039129345849e-08, 1.1236318782283366e-09, ],
[ -9.653049801615194e-09, -5.085084080939686e-13, -5.193227542834144e-10, 2.2150208996551937e-11, -7.153939837526577e-11, -1.2818990188541566e-15, 3.857311573958039e-10, 7.746383356715923e-06, -2.1353914725327557e-06, -2.441545193116338e-09, 8.528722362329383e-10, ],
[ 9.466560623375734e-09, -1.4487425861042743e-12, -4.248830704478935e-11, 3.033527635517917e-11, -2.8047589746109834e-10, -2.129696285694938e-15, 6.485640082212606e-16, 1.911682507970913e-05, -3.5850466925484995e-06, -5.575180664639156e-09, 1.491807484673436e-09, ],
[ -8.857338155546692e-09, -5.078129263433435e-13, -4.797201123249927e-10, 1.011705366318591e-11, -3.067051530448128e-11, -1.0268246758851658e-15, 3.562605977586428e-10, 7.940503411030008e-06, -1.1171982025836137e-06, -9.835818345979923e-10, 3.172715323166025e-10, ],
[ 2.2701150794332676e-08, -2.2851323799080795e-12, -2.5604990608894757e-11, 5.552862360027885e-11, -1.0528555709352093e-10, -1.2073501477455282e-15, 1.8309972699947825e-15, 1.0520473036931992e-05, -2.1319680174847028e-06, -9.845346168322042e-09, 8.624896903897621e-10, ],
[ -9.967288644492704e-09, -8.104302501147816e-13, -5.252234785534995e-10, 9.929900211538703e-12, -7.105449466490162e-11, -2.0397881416816833e-15, 3.907053139086441e-10, 7.709740849141371e-06, -2.9971111707487654e-06, -2.8873865975378726e-09, 9.995053236403704e-10, ],
[ 9.452196187287432e-09, -6.641004517474112e-13, -1.1678814596586385e-11, 3.9318276662493256e-11, -6.057553047453938e-10, -1.823081996672914e-15, 6.513520735584595e-17, 6.7841280441664755e-06, -2.596213317238411e-06, -5.371818288531108e-09, 8.344857401135138e-10, ],
[ 2.5185561217646837e-08, -3.5026413967929773e-12, -5.584042862576382e-11, 5.514995293111094e-11, -3.7988268757902994e-11, -2.218231727739454e-15, -4.4116572109665515e-12, 1.0624530826625593e-05, -3.2513174515396553e-06, -1.5070800308955743e-08, 9.847631454043876e-10, ],
])

fitness = calculate_fitness(population)
#[......., val, train, fitness]
#(20,14)
count = 1

print("INITIAL POPULATION")

for i in fitness:
    # write_file(i[:-3])
    # write_file(",".join(i))
    # print("[ ", end="")
    print("[ ", end="")
    for j in i[:-3]:
        print(j, end=", ")
    # f.write("]\n")
    print("]")
print()

while(input() != "NO"):

    print("Generation: ", count)
    
    print("\n\n------------------------------\n")
    print("Generation " + str(count) + "\n")
    print("Initial Population: \n")


    print("\nFitness: \n")
    
    for i in fitness:
        # write_file(i[-3:])
        print(i[-3:])
        # for j in i[:-3]:
        #     print(j, end=", ")
    
    
    mating_pool = select_mating_pool(fitness)

    print("\nAfter Selection: \n")
    for i in mating_pool:
        print(i[:-3])

    offsprings = create_offsprings(mating_pool)


    new_gen = create_gen(np.array(offsprings), fitness)


    fitness = new_gen
    population = new_gen[:,:-3]

    print("\n New Generation:\n")

    for i in new_gen:
        # write_file(i[:-3])
        # write_file(",".join(i))
        # print("[ ", end="")
        print("[ ", end="")
        for j in i[:-3]:
            print(j, end=", ")
        # f.write("]\n")
        print("]")
    print()

    print()
    count += 1
    # print(population.shape)

f.close()
